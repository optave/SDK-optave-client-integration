import OptaveJavaScriptSDK from '../src/main.js';

const optaveClient = new OptaveJavaScriptSDK({
    websocketUrl: process.env.OPTAVE__WEBSOCKET_URL,

    // These parameters are only required when using the authenticate() function.
    // In some cases, the authentication token can be obtained manually or through
    // another process, which makes the authenticate() call unnecessary. In this
    // case, only the openConnection function has to be called, passing the existing token value
    authenticationUrl: process.env.OPTAVE__AUTHENTICATION_URL,
    clientId: process.env.OPTAVE__CLIENT_ID,
    clientSecret: process.env.OPTAVE__CLIENT_SECRET,
});

async function run() {
    // Listen for messages from the WebSocket
    optaveClient.on('message', payload => {
        const message = JSON.parse(payload);
        const { actionType, state, action } = message;
    
        console.log(`Action: ${action} / State: ${state} / Action Type: ${actionType}`);
    });
    
    // Handle errors
    optaveClient.on('error', error => {
        if (typeof error === 'string') {
            console.error(error);
        } else {
            console.error('Error:', error);
        }
    });
    
    // When the connection is opened, send an adjust message
    optaveClient.once('open', () => {
        optaveClient.adjust({
            session: {
                session_id: "79012345-6789-0123-456789abcdef", // Your session ID
                channel: {
                    medium: "chat", // options: "chat", "voice", "email"
                    section: "support_chat",
                    language: "en-US",
                    location: "40.7128,-74.0060", // GPS coordinates
                    device_info: "iOS/18.2, iPhone15,3",
                    device_type: "mobile",
                    browser: "Safari 17.0"
                },
                interface: {
                    app_version: "2.1.0",
                    type: "custom_components",
                    category: "crm",
                    name: "support_dashboard",
                    language: "en-US"
                },
                network: {
                    latency_ms: 95
                }
            },
            request: {
                request_id: "89012345-6789-0123-456789abcdef",
                context: { // generated by optave
                    tenant_id: "a1b2c3d4-e5f6-7890-1234-56789abcdef0", // REQUIRED
                    organization_id: "f7e8d9c0-b1a2-3456-7890-123456789abc", // REQUIRED
                },
                connections: {
                    parent_id: "9e8d7c6b-5a4f-3e2d-1c0b-0987654321ab", // REQUIRED - ID of the message to adjust
                    thread_id: "9e8d7c6b-5a4f-3e2d-1c0b-0987654321ab", // REQUIRED
                },
                attributes: {
                    instruction: "Make it very friendly and funny", // REQUIRED - adjustment instruction
                    content: "Of course! I'd be happy to help you with anything you need.", // REQUIRED - content to adjust
                    variant: "A",
                },
                scope: {
                    conversations: [ // REQUIRED - conversation context
                        {
                            timestamp: "2024-01-15T10:30:00.000Z",
                            participant_id: "2c4f8a9b-1d3e-5f70-8293-456789012def",
                            role: "EndUser",
                            display_name: "John Doe",
                            content: "Hi, can you help me?",
                        },
                        {
                            timestamp: "2024-01-15T10:30:15.000Z",
                            participant_id: "agent_5b8c9d0e-2f4a-6b1c-9d8e-123456789xyz",
                            role: "Agent",
                            display_name: "Sarah Smith",
                            content: "Of course! I'd be happy to help you with anything you need.",
                        }
                    ]
                }
            }
        });

    });

    // Authenticate and open the WebSocket connection
    try {
        const token = await optaveClient.authenticate();
        optaveClient.openConnection(token);
    } catch (error) {
        console.error('Failed to authenticate and connect:', error);
    }
}

run();
