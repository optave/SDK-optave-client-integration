{
	"name": "@optave/client-sdk",
	"version": "3.2.1",
	"description": "Optave client SDK (browser + Node)",
	"private": false,
	"packageManager": "npm@10.8.1",
	"engines": {
		"node": ">=18.17"
	},
	"type": "module",
	"sideEffects": [
		"./runtime/core/main.js",
		"./runtime/core/security-guards.js",
		"./runtime/platform/browser/crypto-polyfill.js",
		"./runtime/platform/browser/urlsearchparams-polyfill.js",
		"./runtime/platform/browser/event-emitter.js",
		"./generated/validators.js"
	],
	"main": "dist/index.cjs",
	"module": "dist/server.mjs",
	"types": "dist/index.d.ts",
	"exports": {
		".": {
			"browser": "./dist/browser.mjs",
			"default": "./dist/server.mjs"
		},
		"./browser": "./dist/browser.mjs",
		"./server": "./dist/server.mjs",
		"./browser-esm": "./dist/browser.mjs",
		"./server-esm": "./dist/server.mjs",
		"./browser-umd": "./dist/browser.umd.js",
		"./server-umd": "./dist/server.umd.js"
	},
	"files": [
		"dist",
		"README.md",
		"LICENSE"
	],
	"scripts": {
		"gen": "asyncapi generate fromTemplate ../../config/specs/asyncapi.yaml ../../config/templates/asyncapi-ts-runtime --output generated --force-write --disable-hook validate",
		"build": "npm run spec:generate && npm run build:webpack && npm run build:ts && npm run assert:umd-bundles && npm run analyze:build-artifacts && npm run governance:manifest",
		"build:ci": "npm run spec:generate && npm run spec:drift-guard && npm run build:webpack && npm run build:ts && npm run assert:umd-bundles && npm run analyze:build-artifacts && npm run governance:manifest",
		"build:webpack": "npm run build:browser:esm && npm run build:server:esm && npm run build:browser:umd && npm run build:server:umd && node scripts/build/generate-source-maps.js",
		"build:browser:esm": "webpack --config webpack.browser.config.js",
		"build:browser:esm:full": "cross-env FULL=1 webpack --config webpack.browser.config.js",
		"build:server:esm": "webpack --config webpack.server.config.js",
		"build:server:esm:full": "cross-env FULL=1 webpack --config webpack.server.config.js",
		"build:browser:umd": "webpack --config webpack.browser.umd.config.js && node scripts/build/generate-source-maps.js",
		"build:browser:umd:full": "cross-env FULL=1 webpack --config webpack.browser.umd.config.js && node scripts/build/generate-source-maps.js",
		"build:server:umd": "webpack --config webpack.server.umd.config.js && node scripts/build/generate-source-maps.js",
		"build:server:umd:full": "cross-env FULL=1 webpack --config webpack.server.umd.config.js && node scripts/build/generate-source-maps.js",
		"build:browser": "npm run spec:generate && npm run build:browser:esm && npm run build:browser:umd",
		"build:server": "npm run spec:generate && npm run build:server:esm && npm run build:server:umd",
		"build:all:full": "npm run build:browser:esm:full && npm run build:server:esm:full && npm run build:browser:umd:full && npm run build:server:umd:full",
		"build:ts": "tsup runtime/core/index.ts --dts --format esm,cjs --out-dir dist",
		"test": "npm run test:all-builds",
		"test:ui": "vitest --ui",
		"test:server": "vitest run --config vitest.config.server.js",
		"test:browser": "vitest run --config vitest.config.browser.js",
		"test:umd-server": "cross-env SDK_BUILD=umd-server vitest run --config vitest.config.umd.js",
		"test:umd-browser": "cross-env SDK_BUILD=umd-browser vitest run --config vitest.config.umd.js",
		"test:csp-harness": "node scripts/testing/csp-harness-runner.js",
		"test:all-builds": "npm run test:server && npm run test:browser && npm run test:umd-server && npm run test:umd-browser",
		"test:all-builds:csp": "npm run test:all-builds && npm run test:csp-harness",
		"test:builds-parallel": "npm run test:server & npm run test:browser & npm run test:umd-server & npm run test:umd-browser & wait",
		"size": "size-limit",
		"size:why": "size-limit --why",
		"size:baseline": "npm run build && node scripts/build/bundle-size-reporter.js --generate-baseline --output=reports/baseline-sizes.json",
		"size:report": "node scripts/build/bundle-size-reporter.js --format=markdown",
		"size:report:json": "node scripts/build/bundle-size-reporter.js --format=json",
		"size:report:sarif": "node scripts/build/bundle-size-reporter.js --format=sarif",
		"size:compare": "node scripts/build/bundle-size-reporter.js --baseline=reports/baseline-sizes.json --format=github-comment",
		"size:sarif": "node scripts/build/bundle-size-reporter.js --baseline=reports/baseline-sizes.json --format=sarif",
		"size:check": "npm run size && npm run size:compare",
		"analyze": "npm run analyze:server-umd",
		"analyze:server-umd": "cross-env ANALYZE_OPEN=false ANALYZE_MODE=static webpack --config webpack.analyzer.config.js",
		"analyze:browser-umd": "cross-env ANALYZE_OPEN=false ANALYZE_MODE=static ANALYZE_PORT=8889 webpack --config webpack.analyzer.config.js --env buildTarget=browser",
		"analyze:static": "cross-env ANALYZE_MODE=static npm run analyze:server-umd",
		"analyze:json": "cross-env ANALYZE_MODE=json npm run analyze:server-umd",
		"analyze:all": "npm run build && npm run analyze:server-umd && npm run analyze:browser-umd",
		"analyze:reports": "cross-env ANALYZE_OPEN=false ANALYZE_MODE=static npm run analyze:all",
		"analyze:build-artifacts": "npm run analyze:build:server && npm run analyze:build:browser",
		"analyze:build:server": "cross-env ANALYZE_OPEN=false ANALYZE_MODE=static webpack --config webpack.analyzer.config.js --env buildTarget=server && cross-env ANALYZE_OPEN=false ANALYZE_MODE=static FULL=1 webpack --config webpack.analyzer.config.js --env buildTarget=server",
		"analyze:build:browser": "cross-env ANALYZE_OPEN=false ANALYZE_MODE=static webpack --config webpack.analyzer.config.js --env buildTarget=browser && cross-env ANALYZE_OPEN=false ANALYZE_MODE=static FULL=1 webpack --config webpack.analyzer.config.js --env buildTarget=browser",
		"analyze:tree-shaking": "node scripts/analysis/analyze-tree-shaking.js",
		"validate:tree-shaking": "node scripts/analysis/validate-tree-shaking.js",
		"export-surface": "node scripts/analysis/export-surface.js",
		"export-surface:full": "node scripts/analysis/export-surface.js --mode=full",
		"export-surface:quick": "node scripts/analysis/export-surface.js --mode=quick",
		"export-surface:diff": "node scripts/analysis/export-surface.js --mode=diff",
		"check:export-surface": "node scripts/analysis/export-surface.js --mode=quick",
		"diff:export-surface": "node scripts/analysis/export-surface.js --mode=diff",
		"spec:validate": "echo 'AsyncAPI validation only available in CI (to avoid dependency conflicts)'",
		"spec:generate:html": "echo 'AsyncAPI HTML generation only available in CI (to avoid dependency conflicts)'",
		"spec:generate:json": "echo 'Using source spec directly from config/specs/asyncapi.yaml'",
		"spec:types": "node scripts/generation/generate-types.cjs",
		"spec:validators": "node scripts/generation/generate-validators.cjs",
		"spec:constants": "node scripts/generation/generate-constants.cjs",
		"spec:version": "node scripts/generation/sync-package-version.cjs",
		"spec:examples": "node scripts/generation/generate-examples.js",
		"spec:generate": "npm run spec:version && npm run spec:types && npm run spec:validators && npm run spec:constants",
		"spec:generate:examples": "npm run spec:examples",
		"spec:drift-guard": "node scripts/validation/schema-drift-guard.js",
		"assert:umd-bundles": "node scripts/validation/assert-umd-bundles.cjs",
		"governance:check": "node scripts/validation/governance-check.js",
		"governance:manifest": "node scripts/generation/generate-governance-manifest.js"
	},
	"author": "",
	"dependencies": {
		"ajv": "^8.17.1",
		"ajv-formats": "^3.0.1",
		"uuid": "^11.0.3",
		"uuidv7": "^1.0.2",
		"ws": "^8.18.0"
	},
	"devDependencies": {
		"@babel/core": "^7.26.0",
		"@babel/preset-env": "^7.26.0",
		"@size-limit/preset-big-lib": "^11.2.0",
		"@vitest/ui": "^3.2.4",
		"babel-loader": "^9.2.1",
		"cross-env": "^10.0.0",
		"jsdom": "^27.0.0",
		"size-limit": "^11.2.0",
		"tsup": "^8.0.1",
		"typescript": "^5.5.4",
		"vitest": "^3.2.4",
		"webpack": "^5.96.1",
		"webpack-bundle-analyzer": "^4.10.2",
		"webpack-cli": "^5.1.4",
		"yaml": "^2.8.1"
	},
	"publishConfig": {
		"access": "public"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/optave/SDK-optave-client-integration.git"
	},
	"keywords": [
		"sdk",
		"optave"
	],
	"license": "Apache-2.0",
	"bugs": {
		"url": "https://github.com/optave/SDK-optave-client-integration/issues"
	},
	"homepage": "https://github.com/optave/SDK-optave-client-integration#readme"
}
